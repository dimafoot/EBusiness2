//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LocationAppMainWebService.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITrainServices")]
    public interface ITrainServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainServices/Add", ReplyAction="http://tempuri.org/ITrainServices/AddResponse")]
        int Add(int firstNumber, int secondNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainServices/Add", ReplyAction="http://tempuri.org/ITrainServices/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int firstNumber, int secondNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainServices/GetCalculations", ReplyAction="http://tempuri.org/ITrainServices/GetCalculationsResponse")]
        string[] GetCalculations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainServices/GetCalculations", ReplyAction="http://tempuri.org/ITrainServices/GetCalculationsResponse")]
        System.Threading.Tasks.Task<string[]> GetCalculationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainServices/GetRadomLocation", ReplyAction="http://tempuri.org/ITrainServices/GetRadomLocationResponse")]
        Microsoft.Maps.MapControl.WPF.Location GetRadomLocation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainServices/GetRadomLocation", ReplyAction="http://tempuri.org/ITrainServices/GetRadomLocationResponse")]
        System.Threading.Tasks.Task<Microsoft.Maps.MapControl.WPF.Location> GetRadomLocationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainServices/GetTrainLocations", ReplyAction="http://tempuri.org/ITrainServices/GetTrainLocationsResponse")]
        Microsoft.Maps.MapControl.WPF.Location[] GetTrainLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrainServices/GetTrainLocations", ReplyAction="http://tempuri.org/ITrainServices/GetTrainLocationsResponse")]
        System.Threading.Tasks.Task<Microsoft.Maps.MapControl.WPF.Location[]> GetTrainLocationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrainServicesChannel : LocationAppMainWebService.ServiceReference1.ITrainServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrainServicesClient : System.ServiceModel.ClientBase<LocationAppMainWebService.ServiceReference1.ITrainServices>, LocationAppMainWebService.ServiceReference1.ITrainServices {
        
        public TrainServicesClient() {
        }
        
        public TrainServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrainServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrainServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrainServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(int firstNumber, int secondNumber) {
            return base.Channel.Add(firstNumber, secondNumber);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int firstNumber, int secondNumber) {
            return base.Channel.AddAsync(firstNumber, secondNumber);
        }
        
        public string[] GetCalculations() {
            return base.Channel.GetCalculations();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCalculationsAsync() {
            return base.Channel.GetCalculationsAsync();
        }
        
        public Microsoft.Maps.MapControl.WPF.Location GetRadomLocation() {
            return base.Channel.GetRadomLocation();
        }
        
        public System.Threading.Tasks.Task<Microsoft.Maps.MapControl.WPF.Location> GetRadomLocationAsync() {
            return base.Channel.GetRadomLocationAsync();
        }
        
        public Microsoft.Maps.MapControl.WPF.Location[] GetTrainLocations() {
            return base.Channel.GetTrainLocations();
        }
        
        public System.Threading.Tasks.Task<Microsoft.Maps.MapControl.WPF.Location[]> GetTrainLocationsAsync() {
            return base.Channel.GetTrainLocationsAsync();
        }
    }
}
